.dataEntryWrapper {
    max-height: calc(70vh - 105px);
    break-inside: avoid-column;
    -webkit-column-break-inside: avoid;
    
}
/* check box styles */
.dataEntryCheckboxWrapper {
    display: block;
    position: relative;
    padding-left: 35px;
    padding-top: .25rem;
    margin-bottom: .5rem;
    cursor: pointer;
    font-size: 1rem;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    width: 100%;
}
.dataEntryCheckboxWrapper input[type='checkbox'] {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}
.dataEntryCheckboxWrapper input[type='text'] {
    height: 1.25rem;
    border: none;
    outline: none;
    padding: .25rem;
    margin: .25rem 0rem;
    width: calc(100% - 1rem);
    border-radius: 5px;
}

.dataEntryCheckboxWrapper .checkmark {
    position: absolute;
    top: .5rem;
    left: 0;
    height: 25px;
    width: 25px;
    border: solid 2px var(--primary-color-dark);
    border-radius: 5px;
    background-color: var(--primary-color-light);
}
.dataEntryCheckboxWrapper:hover input[type='checkbox'] ~ .checkmark {
    background-color: var(--primary-color-light);
}

.dataEntryCheckboxWrapper input[type='checkbox']:checked ~ .checkmark {
    background-color: var(--primary-color) !important;
    border-color: var(--primary-color) !important;
}

.dataEntryCheckboxWrapper .checkmark:after {
    content: "";
    position: absolute;
    display: none;
}


.dataEntryCheckboxWrapper input[type='checkbox']:checked ~ .checkmark:after {
content: '';
display: inline-block;
  font-style: normal;
  color: #fff;
  font-variant: normal;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
  content: "\f00c";
}
.dataEntryCheckboxWrapper .checkmark:after {
    left: 5px;
    top: 2px;
    width: 5px;
    height: 10px;
  }

.dataEntryCfiPlaceholder {
    margin: 0 !important;
    padding: 0 !important;
    color: transparent !important;
    font-size: 1px !important;
    line-height: 0 !important;
}
/* end checkbox styles */

/* dropdown styles */

.dropdownWrapper select {
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    outline: 0;
    box-shadow: none;
    border: 0 !important;
    background: var(--dark-background);
    background-image: none;
}
.dropdownWrapper select::-ms-expand {
    display: none;
}
.dropdownWrapper {
    position: relative;
    display: flex;
    width: calc(100% - .25rem);
    height: 2em;
    line-height: 2;
    background: var(--dark-background);
    overflow: hidden;
    border-radius: .25em;

}

.dropdownWrapper select {
    flex: 1;
    padding: 0 .5em;
    color: #fff;
    cursor: pointer;
  }
  /* Arrow */
  .dropdownWrapper::after {
    content: '\f0dd';
    font-weight: 900;
    top: 0;
    right: 0;
    padding: 0 .75em;
    line-height: 1.5rem;
    background: var(--primary-color-light);
    cursor: pointer;
    pointer-events: none;
    -webkit-transition: .25s all ease;
    -o-transition: .25s all ease;
    transition: .25s all ease;
    display: inline-block;
    font-style: normal;
    font-family: "Font Awesome 5 Free";
    font-variant: normal;
    text-rendering: auto;
    -webkit-font-smoothing: antialiased;
  }
  /* Transition */
  .dropdownWrapper:hover::after {
    color: #ffffff;
  }
  

.dataEntryCallout,
.dataEntrySubFormCallout {
    background-color: var(--light-background);
    width: calc(100% - 2px);
    margin: 0;
    clear: both;
    /*max-height: calc(70vh - 105px);*/
    overflow: hidden;
    /* fix for Firefox */
    break-inside: avoid-column;
    -webkit-column-break-inside: avoid;
    display: flex;
    flex-direction: column;
}

.dataEntryCallout.edit input[type="radio"] {
    display: inline-block;
}

.dataEntryCallout input[type="radio"] {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    position: relative;
    background-color: var(--dark-background);
    color: var(--light-font);
    height: 2em;
    width: 2em;
    border: 0;
    border-radius: 50px;
    cursor: pointer;
    outline: none;
    margin-right: 7px;
}

.dataEntryCallout input[type="radio"]:hover {
    background-color: var(--primary-color-dark);
}

.dataEntryCallout input[type="radio"]:checked {
    background-color: var(--primary-color);
}

.dataEntryCallout input[type="radio"]:checked::before {
    content: '\02143';
    position: absolute;
    font: 1em/1 'Open Sans', sans-serif;
    left: 8px;
    top: 5px;
    transform: rotate(40deg);
}

.dataEntryTableContainer table input[type="radio"] {
    left: 0;
    right: 0;
    margin-left: auto;
    margin-right: auto;
}

.dataEntryCallout::after {
    content: " ";
    display: block;
    height: 0;
    clear: both;
}

/* hide stylized dropdown on team and class mode */
.classViewMode .dropdownWrapper,
.teamViewMode .dropdownWrapper {
    display: none;
}
/* hide stylized checkbox and remove wrapper padding
  when in class or team view */
.classViewMode .dataEntryCheckboxWrapper .checkmark,
.teamViewMode .dataEntryCheckboxWrapper .checkmark {
    display: none;
}
.classViewMode .dataEntryCheckboxWrapper,
.teamViewMode .dataEntryCheckboxWrapper {
    padding-left: 0px;
    padding-top: 0px;
}

.dataEntryCallout .unofficialView,
.dataEntryCallout .officialView,
.dataEntryCallout .privateView,
.dataEntryCallout .teamView,
.dataEntryCallout .classView,
.dataEntryCallout .edit {
    display: none;
}

.dataEntryCallout.privateViewMode .privateView,
.dataEntryCallout.teamViewMode .teamView,
.dataEntryCallout.classViewMode .classView,
.dataEntryCallout.unofficialViewMode .unofficialView,
.dataEntryCallout.officialViewMode .officialView,
.dataEntryCallout.editMode .edit {
    display: block;
}

.dataEntryCallout.editMode .dataEntryEditModeButton,
.dataEntryCallout.unofficialViewMode .dataEntryViewModeButton,
.dataEntryCallout.officialViewMode .dataEntryOfficialModeButton,
.dataEntryCallout.privateViewMode .dataEntryPrivateViewModeButton,
.dataEntryCallout.teamViewMode .dataEntryTeamViewModeButton,
.dataEntryCallout.classViewMode .dataEntryClassViewModeButton {
    background: var(--primary-color-dark);
    color: var(--light-font);
    font-weight: bold;
}

.dataEntryCallout p {
    font-weight: 600;
    font-size: 1.1em;
    margin: 0;
    padding: 0;
}

.dataEntryHeader {
    background: var(--primary-color-light);
    display: flex;
    justify-content: space-around;
    align-items: center;
    color: var(--dark-font);
    order: 1;
}

.dataEntryHeader>div {
    width: 100%;
    text-align: center;
    cursor: pointer;
}

.dataEntryHeader>div:hover,
.dataEntryHeader>div.active {
    background: var(--primary-color-dark);
    color: var(--light-font);
}


.dataEntryFooter>button:hover {
    background: var(--primary-color-dark);
    color: #fff;
}

.dataEntryCallout form {
    max-height: calc(70vh - 192px);
    overflow: auto;
    order: 2;
}

.dataEntryCallout form.fixScrolling,
.dataEntrySubFormCallout form.fixScrolling {
    will-change: transform;
}

.dataEntryCallout textarea,
.dataEntryCallout textarea:active {
    background-color: var(--light-background);
    overflow: auto;
    outline: none;
    border: none;
    font-size: .9em;
    font-weight: 300;
}

.dataEntryCallout form>.textBox,
.dataEntryCallout form>.dataEntryDropdownContainer,
.dataEntryCallout form>.dataEntryMultiChoiceContainer,
.dataEntryCallout form>.dataEntryTableContainer,
.dataEntrySubFormCallout form>.textBox,
.dataEntryCallout form>.dataEntryHeaderEntry,
.dataEntryCallout form>.dataEntryCheckboxContainer {
    padding: .5rem;
    border-bottom: 1px solid var(--secondary-grey);


}

.dataEntryCallout form>p,
.dataEntrySubFormCallout form>p {
    padding: .5em;
}

.dataEntryFooter {
    background-color: #fff;
    display: flex;
    align-items: center;
    justify-content: space-around;
    width: 100%;
    padding: .25rem 0rem;
    min-height: 10px;
    order: 3;
}

.dataEntryFooter>button {
    width: 100%;
    color: var(--dark-font);
    background: transparent;
    padding: 0rem 0.25rem;
    height: 2rem;
    background-color: var(--primary-color-light);

    border: none;
    font-size: 1em;
    cursor: pointer;
}

.textInput label {
    display: block;
    margin: 1em 0 0 0;
    font-weight: 400;
}

.textInput textarea {
    margin: .5em 0;
    width: calc(100% - .25rem);
    height: 3em;
    background-color: white;
    border-radius: 5px;
    display: inline-block;
}

.textResponses {
    display: block;
    max-height: 280px;
    box-sizing: border-box;
    padding: 0;
    margin-top: 1em;
    margin-left: -1em;
    margin-right: -1em;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    font-family: var(--primary-font-family);
    font-style: normal;
    font-weight: normal;
    font-size: 14px;
    clear: both;
}

.dataEntryTextResponseNoData {
    margin-top: 1em !important;
    margin-left: 2em !important;
    margin-bottom: 1em !important;
}

.textResponses>.response:not([style*="display: none"])~.dataEntryTextResponseNoData {
    display: none;
}

.textResponses .response,
.dataEntryCheckboxContainer .response {
    position: relative;
    padding: .8em 1em .5em 3em;
    margin: 0;
    background: #eee;
}

.textResponses .response>i,
.dataEntryCheckboxContainer .response>i {
    position: absolute;
    left: 0.5em;
    font-size: 1.5em;
}

.textResponses .showMore {
    display: block;
    padding: 1em;
    padding-left: 80px;
    margin: 0;
    font-style: italic;
}

.textResponses .your.response,
.dataEntryCheckboxContainer .your.response {
    background-color: var(--light-background);
}

.textResponses .response .userId,
.dataEntryCheckboxContainer .response .userId {
    font-weight: bold;
}

.textResponses .response .timestamp,
.dataEntryCheckboxContainer .response .timestamp {
    margin-left: .5em;
    /*    letter-spacing: .5em;*/
    font-size: .75em;
    color: #999;
}

.textResponses .response .message,
.dataEntryCheckboxContainer .response .message {
    font-style: normal;
    font-weight: normal;
    margin: .5em 0;
}

.dataEntryCheckboxContainer {
    display: flex;
    align-items: center;
    border-bottom: 1px solid #ddd;
    justify-content: space-between;
    /*    background: rgba(0, 168, 142, 0.2);*/
    /*    margin-bottom: 5px;*/
}

.dataEntryCheckboxContainer>span {
    padding: 0.5em;
    width: 100%;
}

.dataEntryCheckboxContainer>input[type="checkbox"] {
    will-change: transform;
    -ms-transform: scale(1.5);
    -moz-transform: scale(1.5);
    -webkit-transform: scale(1.5);
    -o-transform: scale(1.5);
    padding: 10px;
    margin: 1em;
}

.dataEntryCheckboxResponseContainer {
    padding: 0.5em;
    max-width: 50%;
    font-family: "Helvetica Neue", sans-serif;
    font-style: normal;
    font-weight: normal;
    font-size: 14px;
    flex-shrink: 0;
}

.dataEntryCheckboxResponseContainer>span {
    display: block;
}

.dataEntryDropdownContainer {
    padding: 1rem;
    border-bottom: 1px solid #ddd;
}

.dataEntryDropdownContainer select {
    max-width: 90%;
    margin: 0rem 1em;
}

.dataEntryDropdownContainer .textResponses {
    margin-top: 2em;
}

.dataEntrySubFormCallout {
    display: none;
    position: fixed;
    background-color: var(--light-background);
    top: 60px;
    left: 0;
    max-height: calc(100% - 70px);
    overflow: auto;
}

.dataEntryMultiChoiceContainer {
    padding: 1em;
}

.dataEntryMultiChoiceButtonsContainer {
    display: flex;
    flex-direction: column;
}


.dataEntryMultiChoiceButton {
    padding: 2em;
    cursor: pointer;
    outline: none;
    margin: 0.5em;
    -webkit-appearance: none;
    background: var(--dark-background);
}

.dataEntryMultiChoiceButton.active {
    background: var(--primary-color);
    color: white;
}

.dataEntryMultiChoiceButton:hover {
    background: var(--primary-color);
    color: white;
}

.dataEntryMultiChoiceResponse {
    margin: 0.5em;
}

.dataEntryMultiChoiceResponseContent {
    display: flex;
}

.dataEntryMultiChoiceResponseTextContainer {
    width: 50%;
}

.dataEntryMultiChoiceResponseGraphContainer {
    width: 50%;
}

.dataEntryMultiChoiceResponseGraphParentBar {
    background: gainsboro;
    width: 100%;
    height: 100%;
    position: relative;
}

.dataEntryMultiChoiceResponseGraphFillBar {
    background: var(--primary-color);
    height: 100%;
    width: 0;
    transition: width 0.5s ease;
}

.dataEntryMultiChoiceResponseCount {
    margin-left: 1em;
}

.pollingWindow {
    background: var(--light-background);
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    margin: 1em;
    z-index: 9999;
    display: flex;
    justify-content: center;
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
}

.pollingWindow>.dataEntryCallout {
    width: 100% !important;
}

.pollingWindow form>p {
    font-weight: bold;
    font-size: 1.2em;
}

.pollingWindow .dataEntryMultiChoiceButton {
    font-size: 1em;
    font-weight: bold;
    padding: 1em;
}

.pollingWindow .dataEntryFormSubmit {
    font-weight: bold;
    font-size: 1.2em;
}

.pollingWindow .dataEntryMultiChoicePrompt {
    font-size: 1.2em;
    border-bottom: solid .5px var(--dark-background);
}

.pollingWindow .dataEntryCallout {
    max-height: calc(100vh - 105px);
}

.pollingWindow .dataEntryCallout form {
    max-height: calc(100vh - 192px);
}

.showInlineMakeOfficial .inlineMakeOfficialContainer {
    display: flex;
}

.inlineMakeOfficialContainer {
    display: none;
    color: #08a88e;
}
.dataEntryTableContainer {
    border-bottom: 1px solid #ddd;
    padding-top: 1rem;
}
.dataEntryTableContainer table th {
    font-weight: 500;
    font-family: var(--primary-font-family);
    font-size: .9em;
    color: var(--dark-background);
    text-align: center;
    padding: 0.5em;
}

.dataEntryTableContainer table td {
    background: var(--light-background);
    text-align: center;
    padding: 0.5em;
}